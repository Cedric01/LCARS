@page "/builds"

<PageTitle>LCARS | Builds</PageTitle>

@using LCARS.Data
@inject BuildsService buildsService

<Header Text="Builds" />

@if (builds == null)
{
    <Loading />
}
else
{
    <div class="container">
        @foreach (var build in builds)
        {
            <div class="build">
                <div class="left"></div>
                <div class="label">@build.BuildTypeId</div>
                <div class="data @GetStatusColor(build)">@GetBuildStatus(build)</div>
                <div class="right"></div>
            </div>
        }
    </div>
}

@code {
    private IEnumerable<Build>? builds;

    protected override async Task OnInitializedAsync()
    {
        var timer = new System.Threading.Timer(async (_) =>
        {
            await RefreshBuilds();
            await InvokeAsync(StateHasChanged);
        }, null, 0, 5000);
    }

    private async Task RefreshBuilds()
    {
        builds = await buildsService.GetBuildsAsync();
    }

    private string GetBuildStatus(Build build)
    {
        if (build.Status == "finished")
            return build.State == "SUCCESS" ? build.BuildNumber: "FAILED";
        else // running
            return $"{build.PercentageComplete}%";
    }

    private string GetStatusColor(Build build)
    {
        if (build.Status == "finished")
            return build.State == "SUCCESS" ? "green" : "red";
        else // running
            return "yellow";
    }
}